env: 
  - secure: 
matrix:
  # allow_failures:
  #   - os: windows
  include:
    - os: osx
      language: node_js
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
        - NODE_ENV=dev
        - RELEASE_PROD_DIR = osx-prod
        - RELEASE_DEV_DIR = osx-dev

    - os: linux
      language: node_js
      services:
        - xvfb
      env:
        - NODE_ENV=dev
        - RELEASE_PROD_DIR = linux-prod
        - RELEASE_DEV_DIR = linux-dev
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-multilib
            - g++-8
            - g++-multilib
            - icnsutils
            - graphicsmagick
            - xz-utils
            - xorriso
            - rpm

    # - os: windows
    #   language: node_js
    #   node_js:
    #     - 8
    #   env:
    #     - ELECTRON_CACHE=$HOME/.cache/electron
    #     - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
    #     - NODE_ENV=dev


before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  yarn: true
  directories:
    - node_modules
    - $(npm config get prefix)/lib/node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX="g++-8"; fi

install:
  - yarn --ignore-engines
  # On Linux, initialize "virtual display". See before_script


before_script:
  # osx set window size
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then "/Library/Application Support/VMware Tools/vmware-resolutionSet" 1920 1080;
    fi
  # On Linux, create a "virtual display". This allows browsers to work properly
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi


script:
# update the xdg implementation on the machine. older version is buggy
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cp node_modules/open/xdg-open ~/bin/;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then xdg-open --version;
    fi
  - yarn lint
  - travis_retry yarn run test-peruse --forceExit
  - travis_retry yarn run test-exts --forceExit
  - yarn build-e2e
  - travis_retry yarn cross-env NODE_ENV=test TEST_CAFE=true IS_UNPACKED=true testcafe electron:. ./__testcafe__/peruse.spec.ts
  - travis_retry yarn cross-env NODE_ENV=test TEST_CAFE=true IS_UNPACKED=true testcafe electron:. ./__testcafe__/navigation.spec.ts
  - travis_retry yarn cross-env NODE_ENV=test TEST_CAFE=true IS_UNPACKED=true testcafe electron:. ./__testcafe__/settingsMenu.spec.ts
  - travis_retry yarn cafe-e2e-safe;



after_failure:
- ls /home/travis/safe-browser/app/node_modules/@maidsafe/safe-node-app/src/native
# - cat ~/.local/share/applications/mimeapps.list
# - cat ~/.local/share/applications/maidsafenet-ltd-safe-browser-authenticator.desktop
- which xdg-open
- xdg-open --version
# - bash -x ~/bin/xdg-open safe-auth://whaaaaa
# - cat $TMPDIR/safe-browser.log;
# check resolution...
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  system_profiler SPDisplaysDataType | grep Resolution
  fi


before_deploy:
  - yarn package
  - rm -rf node_modules/@maidsafe/safe-node-app/src/native/mock
  - rm -rf app/extensions/safe/dist/mock/
  - NODE_ENV=prod yarn package
  - cd release;
  # don't fail if nothing to do.
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then zip -d *.zip *.DS_Store && zip -d *.zip  __MACOSX/\* || true;
    fi
  - cd ..
  - ls release
  - export RELEASE_DEV_EXE="$(ls release/safe-browser-dev/*-dev.exe)";
  - export RELEASE_PROD_EXE="$(ls release/safe-browser-production/*-production.exe)";
  - export RELEASE_DEV_ZIP="$(ls release/safe-browser-dev/*.zip)";
  - export RELEASE_PROD_ZIP="$(ls release/safe-browser-production/*.zip)";
  - export RELEASE_DEV_YML="$(ls release/safe-browser-dev/latest.yaml)";
  - export RELEASE_PROD_YML="$(ls release/safe-browser-production/latest.yaml)";
  - export RELEASE_DEV_BLOCKMAP="$(ls release/safe-browser-dev/*1-dev.exe.blockmap)";
  - export RELEASE_PROD_BLOCKMAP="$(ls release/safe-browser-production/*-production.exe.blockmap)";
  - echo "deploying ${RELEASE_DEV_ZIP} to GitHub releases as tagged with ${TRAVIS_TAG}"
  - ls release


deploy:
  - provider: s3
    access_key_id: "AKIAVVODCRMSO7KD57BA"
    secret_access_key: "KdkokhthUg6E9MPkda/goz7hrvicoBBDCFVr8ypNsCkwPpZbTzTAyE5eHveDQSMmZaBmtHAUCCegeQmEudkojuiK2arUrIpYkDlxrIq9+vhIfme4R/2d7hcEZakagdQ6ns8dtG1moo5vpijN0ghkch4g/+7jVhRIE7PxHRAVYKkdlOzwLVOuHcoBk9l6+Wl4Tw2XIhs0YKoo+Bhg4wI2yQz/CEfCT4EhCAFiNVVm2PDS3ndOA4vIqth86t+EFDFCxpEeo3lBUb1rJMiXrNxJ6WA18PXhPWzK6jvuiqXMYL6U4QuTOP/YtBExyCNuDXK+2pmimzyzYiGwBI29jqkZe1DePaJs1q6o9Cq+OFjAGUb/8GAxE7PkhREguyhv4d8avcMCZu6uLhYU037CyDyiC34kLp75UleYeEc8wUXcC21+RC/3EP6NPuKlDSQm2WW8y3m/6+r2/yKHf07ak+Gx5dAKhE5Q9r5eDO7VoEiHElgeUVWegZM+/aMacWdz86BKX/FDCevVbyq+XuGiysPV42zyNe4gqjSuJfzA3B0NoBUdlbgKHUR+/ZXaGLbQTzOYz43l4422uDTrP0/ASRnPOktct+ekkGtydIZdr2f+gYnJDd07UAHZ85GYSv7NTR0S8D8LCU1Ugy02fRy6wV1gRkI/h5DanM6KM8KDajynvIM="
    bucket: "safe-browser"
    file:
      - "${RELEASE_PROD_EXE}"
      - "${RELEASE_PROD_ZIP}"
      - "${RELEASE_PROD_YML}"
      - "${RELEASE_PROD_BLOCKMAP}"
    upload-dir: $RELEASE_PROD_DIR
    skip_cleanup: true
    acl: public_read
    on:
      tags: true
      branch: dev
  - provider: s3
    access_key_id: "AKIAVVODCRMSO7KD57BA"
    secret_access_key: "KdkokhthUg6E9MPkda/goz7hrvicoBBDCFVr8ypNsCkwPpZbTzTAyE5eHveDQSMmZaBmtHAUCCegeQmEudkojuiK2arUrIpYkDlxrIq9+vhIfme4R/2d7hcEZakagdQ6ns8dtG1moo5vpijN0ghkch4g/+7jVhRIE7PxHRAVYKkdlOzwLVOuHcoBk9l6+Wl4Tw2XIhs0YKoo+Bhg4wI2yQz/CEfCT4EhCAFiNVVm2PDS3ndOA4vIqth86t+EFDFCxpEeo3lBUb1rJMiXrNxJ6WA18PXhPWzK6jvuiqXMYL6U4QuTOP/YtBExyCNuDXK+2pmimzyzYiGwBI29jqkZe1DePaJs1q6o9Cq+OFjAGUb/8GAxE7PkhREguyhv4d8avcMCZu6uLhYU037CyDyiC34kLp75UleYeEc8wUXcC21+RC/3EP6NPuKlDSQm2WW8y3m/6+r2/yKHf07ak+Gx5dAKhE5Q9r5eDO7VoEiHElgeUVWegZM+/aMacWdz86BKX/FDCevVbyq+XuGiysPV42zyNe4gqjSuJfzA3B0NoBUdlbgKHUR+/ZXaGLbQTzOYz43l4422uDTrP0/ASRnPOktct+ekkGtydIZdr2f+gYnJDd07UAHZ85GYSv7NTR0S8D8LCU1Ugy02fRy6wV1gRkI/h5DanM6KM8KDajynvIM="
    bucket: "safe-browser"
    file:
      - "${RELEASE_DEV_EXE}"
      - "${RELEASE_DEV_ZIP}"
      - "${RELEASE_DEV_YML}"
      - "${RELEASE_DEV_BLOCKMAP}"
    upload-dir: $RELEASE_DEV_DIR
    skip_cleanup: true
    acl: public_read
    on:
      tags: true
      branch: dev